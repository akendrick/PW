<?php
/**
* @file
* Custom FAPI payment info with validation + submission.
*
* Creates a box with a link to a custom page: `submit-ad`.
* `submit-ad` page determines your role:
*   - Anon users can login or register an account.
*     (Based on LoginToboggan unified login page.)
*   - 'Submit Ad' & other 'Authenticated' users go straight ad creation.
*  Add custom jQuery price checker with a PHP price check.
*   - the PHP is the absolute truth and the one that is saved.
*
*  Send EMails
*    - ad_payment_mail_send
*      - Prepopulates the email with to and from...
*    - ad_payment_mail
*      - Prepares the body of the email.
*    - _ad_payment_notify
*      - Discontinued email notification
*
*  - Redirect to thank you upon completion.
*
* @TODO
* - Live test CC Submit Handler!
* - Take over or give up and let LoginToboggan take over the login.
*/

/**
* Implementation of HOOK_menu
*/
function ad_payment_menu() {
  $items['ad/submit'] = array(
    'title'           => 'Submit Classified Ad',
    'access callback' => TRUE,
    'page callback'   => 'ad_payment_ad_submit_form_page',
    'type'            => MENU_NORMAL_ITEM,
  );

  $items['ad/%/thank-you'] = array(
    'access callback' => TRUE,
    'title' => 'Your ad has been submitted.',
    'page callback' => 'thankyou_page',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
* Thank You Page
*
*/
function thankyou_page($temp_id = NULL) {
  if (!$temp_id) {
    $content .= "<div id='adsubmission-thank-you'>";
    $content .= "<h3 class='thank-you thank-you-header'>There are no submitted ads at this time.</h3>";
    $content .= "<p class='thank-you thank-you-body'>.";
    $content .= '<p>' . l('Submit new classifed ad.', 'ad/submit') . '<p>';
    $content .= '</div>';
  }
  else {
    $data = variable_get('ad_submission_' . $temp_id);
    
    if (DEBUG) {
      dpm('Submitted Data');
      dpm($data);

      if(isset($data['variables']['image'])){
        dpm('Image Fid Data');
        dpm($data['variables']['image']);
      }
    }

    // AD Details
    $details = "
        <div class='reciept-details grid-8 alpha'>
          <h3 class='receipt-details-title'>Ad Details</h3>
          <dl class='receipt-copy'>
            <dt class='receipt-copy'>Ad:</dt>
            <dd class='receipt-copy'>" . $data['values']['ad_copy'] . "</dd>
          </dl>
          <dl class='receipt-area'>
            <dt class='receipt-area'>Publication Area:</dt>
            <dd class='receipt-area'>" . $data['values']['area'] . "</dd>
          </dl>
          <dl>
            <dt class='receipt-classification'>Classification:</dt>
            <dd class='receipt-copy'>" . $data['rate']['term_name'] . "</dd>
          </dl>
          <dl class='receipt-rate'>
            <dt class='receipt-rate'>Rate:</dt>
            <dd class='receipt-copy'>" . $data['rate']['rate_name'] . "</dd>
          </dl>
          <dl class='receipt-duration'>
            <dt class='receipt-duration'>Duration:</dt>
            <dd class='receipt-copy'>" . $data['duration']['actual'] . " weeks</dd>
          </dl>";
      if ($data['variables']['ad_type']) {
        $details .= "
          <dl class='receipt-liveload'>
            <dt class='receipt-liveload'>Liveload:</dt>
            <dd class='receipt-copy'>" . $data['values']['ad_type'] . "</dd>
          </dl>";
      }
      if ($data['variables']['image']) {
          $details .= "
            <dl class='receipt-image'>
              <dt class='receipt-image'>Image:</dt>
              <dd class='receipt-copy'>Image received (fid: " . $data['values']['image'] . ")</dd>
            </dl>";
      }
      if ($data['variables']['notes']) {
          $details .= "
            <dl class='receipt-notes'>
              <dt class='receipt-notes'>Notes:</dt>
              <dd class='receipt-copy'>" . $data['values']['notes'] . "</dd>
            </dl>";
      }
      $details .= "\t </div>";  
      
    $price = "
        <div class='small-receipt receipt-price grid-8 omega'>
          <h4 class='receipt-price-title'>Price</h3>
        <div class='small-receipt receipt-price-inner'>
          <dl class='receipt-price-subtotal'>
            <dt class='receipt-price-subtotal'>Sub-total:</dt>
            <dd class='receipt-price-subtotal'>$" . $data['subtotal'] . "</dt>
          </dl>
          <dl class='receipt-price-taxes'>
            <dt class='receipt-price-taxes'>Taxes:</dt>
            <dd class='receipt-price-taxes'>$" . $data['taxes'] . "</dt>
          </dl>
          <dl class='receipt-price-total'>
            <dt class='receipt-price-total'>Total:</dt>
            <dd class='receipt-price-total'>$" . $data['total'] . "</dt>
          </dl>
        </div>
        </div>
      ";

    $contact = "
        <div class='small-receipt receipt-contact grid-8 omega'>
          <h4 class='receipt-contact'>Contact Information</h3>
          <div class='small-receipt receipt-contact-inner'>
          <dl class='receipt-contact-name'>
            <dt class='receipt-contact-name'>Name:</dt>
            <dd class='receipt-contact-name'>" . $data['values']['user']['real-name'] . "</dt>
          </dl>
          <dl class='receipt-contact-phone'>
            <dt class='receipt-contact-phone'>Phone:</dt>
            <dd class='receipt-contact-phone'>" . $data['values']['user']['phone'] . "</dt>
          </dl>
          <dl class='receipt-contact-email'>
            <dt class='receipt-contact-email'>Email:</dt>
            <dd class='receipt-contact-email'>" . $data['values']['user']['email'] . "</dt>
          </dl>
          <dl class='receipt-contact-card'>
            <dt class='receipt-contact-card'>Card type:</dt>
            <dd class='receipt-contact-card'>" . $data['values']['user']['card-type'] . "</dt>
          </dl>
        </div>
      </div>
      ";


    #$receipt = $details . $price . $contact;
    $receipt = theme('ad_payment_receipt', $ad_id);
    $content .= "<div id='adsubmission-thank-you'>";
    $content .= "<h3 class='thank-you thank-you-header'>Thank you for choosing Pennywise.</h3>";
    $content .= "<p class='thank-you thank-you-body'>A confirmation message has been sent to your email address.";
    $content .= '<div class="logo"><img src="sites/default/files/pwlogo.gif"></div>';
    $content .= '<p>Please print this page for your receipt.</p>';
    $content .= '<h3> Ad Receipt #' . $temp_id . '</h3>';
    $content .= '<div id="ad-submission-receipt" class="ad-receipt-box grid-20 prefix-2 ">' . $receipt . '</div>';
    $content .= '<p>' . l('Return to classified ads', '<front>', array('attributes' => array('class' => array('view-classified-ad-link')))) . '<p>';
    $content .= '<p>' . l('Submit another ad', 'ad/submit', array('attributes' => array('class' => array('submit-classified-ad-link')))) . '<p>';
    $content .= '</div>';
 
    //variable_del('ad_submission_' . $temp_id);
  }
  
  return $content;
}

/**
 *  Implements hook_theme
 *
 *  Set up for custom page node form theming.
 */
// function ad_payment_theme($existing, $type, $theme, $path) {
//   return array(
//     'ad_s_node_form' => array(
//       'render element' => 'form',
//       'template' => 'ad-submission-node-form',
//       // set default path:
//       'path' => drupal_get_path('module', 'ad_payment'),
//     ),
//   );
// }

/**
* Implementation of custom page.
*
* If user not logged in present LoginToboggan form.
* else get `Submit Ad` form.
*
* ************************** DISABLED **********
*
* @return
*  form data
*
* The login protion is commented out.
*/
function ad_payment_ad_submit_form_page() {

//  global $user;

//  if (!$user->uid) {
//    // Use this code if you want LoginToboggan
//    //  to take over completely the login process.
//    // This will result in the login form
//    //  defaulting to 'login' rather than 'register'.
//
//    // module_load_include('logintoboggan', 'logintoboggan');
//    // $content = logintoboggan_unified_login_page('login');
//
//    // Cut and paste from LoginToboggan.
//    $register_form = drupal_get_form('user_register_form');
//    $rendered_login_form = drupal_render($login_form);
//    $rendered_register_form = drupal_render($register_form);
//    $variables = array(
//      'login_form'    => $rendered_login_form,
//      'register_form' => $rendered_register_form,
//      'active_form'   => $active_form,
//    );
//    $content = theme('lt_unified_login_page', $variables);
//  }
//  elseif (in_array('submit ad', $user->roles) || in_array('authenticated user', $user->roles)) {
    // Get Node Creation Form.
    module_load_include('inc', 'node', 'node.pages');
    $content = node_add('ad_s');
//  }

  return $content;
}

/**
* Implementation of hook_block_info
*
* @return
*  Ad creation link block
*/
function ad_payment_block_info() {
  $blocks['ad_payment_create_ad'] = array(
    'info'       => 'Submit Classified Ad',
    'status'     => 1,
    'visibility' => 0,
    'region'     => 'sidebar_first',
    'pages'      => 'ad/*',
  );

  return $blocks;
}

/**
* Implementation of hook_block_view
*
* @return
*  `Ad Submit` submission form link.
*/
function ad_payment_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'ad_payment_create_ad':
      $block['subject'] = '<none>';
      $block['content'] = '<div id="ad-submission-link-wrapper">' .
        l('Submit Ad', 'ad/submit', array('attributes' => array('class' => array('ad-submission-link')),)) .
        '</div>';
      break;
  }
  return $block;
}

/**
* Implementation of HOOK_form_alter()
*
* Alter form to increase legibility and flow.
* - Insert a modular Price block for both PHP and jQuery pricing.
* - Insert CC Form in the Last Step (unless in EDITOR role)
*
*/
function ad_payment_form_ad_s_node_form_alter(&$form, &$form_state, $form_id) {

  // Change Save to Submit.
  $form['actions']['save']['#value']  = 'Submit Ad';

  // Insert CC Validation.
  $form['#validate'][] = '_ad_payment_cc_validate';
  $form['#submit'][]   = '_ad_payment_cc_submit';

  // Float First 2 Groups.
  $form['#fieldgroups']['group_ad']->weight = -20;
  $form['#fieldgroups']['group_upgrade']->weight = -10;


  // Load CC form
  module_load_include('inc', 'ad_payment', 'ad_payment_form');
  ad_payment_form($form, $form_state);

  //  Ad Price
  //  - Check only if submitted/in preview.
  if ($form_state && $form_state['values']) {
    module_load_include('inc', 'ad_payment', 'ad_payment_price_check');
    $total_price = ad_payment_price_check($form_state, 'form_state');
    $form['field_price']['#default_value'] = $total_price;
    $ad_price = ($total_price == '0.00') ? 'Current Price: $0' : _ad_payment_form_price_display($form_state);
  }

  if (DEBUG) {
    global $user;
    dpm('USER');
    dpm($user);
    dpm('FORM');
    dpm($form);
    dpm('FORM :: #FIELDGROUPS');
    dpm($form['#fieldgroups']['group_ad']);
    dpm('FORM STATE');
    dpm($form_state);
    dpm('FORM-STATE : NODE');
    dpm($form_state['node']);

    dpm('Access Check:');
    dpm(user_access('submit_ad'));
  }
}

/**
* Implementation of drupal_mail()
*
* Custom email to client and Info@pennywiseads.com upon ad submission.
*
*/
//function _ad_payment_notify($node, $details) {
//
//  $values = array('current_conditions' => $data);
//  $to = 'k2@pennywiseads.com'; // multiple emails ===> 'k2@pennywiseads.com, info@pennywiseads.com';
//  $form = 'no-reply@pennywiseads.com';
//  $send = TRUE;
//  
//  $message['subject'] = t('E-mail sent from @site-name', array('@site-name' => variable_get('site_name', 'Drupal')), $options);
//  // Note that the message body is an array, not a string.
//  $message['body'][] = 'Classified ad submitted to PennywiseAds.com ' . "/n" 
//    . 'Ad Copy: ' . $node->field_ad_copy['und'][0]['value'] . "/n"
//    . 'Section' . $node->field_tags['und'][0]['tid'] . "/n"
//    . 'Rate' . $node->field_rate['und'][0]['value'] . "/n"
//    . 'Type' . $node->field_promote['und'][0]['value'] . "/n"
//    . 'Duration' . $node->field_duration['und'][0]['value'] . "/n"
//    . 'Areas: ' . $details['areas'] . "/n"
//    . 'Duration: ' . $details['options']['liveload'] . "/n"
//    . 'Word Count: ' . $details['count']['count'] . "/n"
//    . 'Image: ' . $details['options']['image'] . "/n"
//    . 'Price: ' . $details['total'] . "/n"
//    . 'Notes: ' . $details['note'] . "/n"
//    . 'NID#: ' . $node->nid . "/n"
//    . 'Duration: ' . $details['duration']['actual'] . "/n";
//
//  // Because this is just user-entered text, we do not need to translate it.
//
//  // Since user-entered text may have unintentional HTML entities in it like
//  // '<' or '>', we need to make sure these entities are properly escaped,
//  // as the body will later be transformed from HTML to text, meaning
//  // that a normal use of '<' will result in truncation of the message.
//  $message['body'][] = check_plain($params['message']);
//
//  $result = drupal_mail('ad_payment', 'notify', $to, $language, $values, $from, $send);
//
//  drupal_set_message(t('Ready to send.'));
//
//  if ($result['result'] == TRUE) {
//    drupal_set_message(t('A confirmation message has been sent.'));
//  }
//  else {
//    drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
//  }
//
//  
//}

function ad_payment_mail_send($values) {
  if (DEBUG) {
    dpm('MAIL SEND - VALUES');
    dpm($values);
  }

  $module = 'ad_payment';
  $key = 'backup_ad_notification';
  
  $to = 'k2@pennywiseads.com';
  $from = 'auto_reply@pennywiseads.com';
  
  $params = $values;
  
  $language = language_default();
  
  $send = TRUE;
  
  $result = drupal_mail($module, $key, $to, $language, $params, $from, $send);
  
  if ($result['result'] == TRUE) {
    drupal_set_message(t('Your message has been set.'));
  }
  else {
    drupal_set_message(t('There was a problem sending your message.'), 'error');
  }
}

/**
* Implementation of hook_mail
*/
function ad_payment_mail($key, &$message, $params) {
  if (DEBUG) {
    dpm('MAIL - PARAMS');
    dpm($params);
    dpm('MAIL - MESSAGE');
    dpm($message);
  }

    $message['body'][] = 'The following ad was received by PennywiseADS: ';

    $ad_received .= "Ad Copy: \n" . $params['values']['ad_copy'] . "\n\n";
    $ad_received .= 'Word Count: ' . $params['count']['count'] . "\n";
    $ad_received .= 'Section: ' . $params['section']. "\n";
    $ad_received .= 'Area (' . $params['areas'] . ")" . $params['values']['area'] . "\n";
    $ad_received .= 'Rate: ' . $params['rate']['rate_name'] . "\n";
    $ad_received .= ($params['values']['ad_type']) ? "Liveload: YES \n " : "";
    $ad_received .= ($params['values']['image']) ? "Image: Received \n" : " ";
    $ad_received .= ($params['values']['notes']) ? $params['values']['notes'] . " \n " : "";
    $ad_received .= 'Duration: ' . $params['duration']['actual'] . ' weeks' . "\n";
/*     $ad_received .= 'Notes: ' . $params['duration'] . "\n"; */
 
    $ad_received .= 'Price: $' . $params['total'] . "\n";
    

    $message['body'][] = check_plain($ad_received);
}


/**
* Custom CC Validation.
*/
function _ad_payment_cc_validate(&$form, &$form_state) {
  // Check CC Data
  module_load_include('inc', 'ad_payment', 'ad_payment_cc_validate');
  _ad_payment_validate_cc_data($form_state);

  // Get Price
  module_load_include('inc', 'ad_payment', 'ad_payment_price_check');
  $price_total = ad_payment_price_check($form_state, 'form_state');
  // form_set_value($form['field_price'], $ad_price, &$form_state);
  $updated_price = array(
    'und' => array(
      0 => array(
        'value' =>  $price_total,
      ),
    ),
  );
  form_set_value($form['field_price'], $updated_price, $form_state);

  // Set CCID
  //$ccid = rand();
  //form_set_value($form['field_ccid'], $ccid, &$form_state);
}

/**
* Custom CC Submit Handler.
*
* Submit data to Netidea.
* Retrieve CCID and feed it into Ad_Payment module to link the two.
*
* Check for User by email
* - If user doesn't exist create with name, email and random password.
* - If already exists link to node.
* - Send email comfirmation.
*/
function _ad_payment_cc_submit($form, &$form_state) {


//  $values = $form_state['values'];
//  $node   = $form_state['node'];
//  $price  = $form_state['storage']['price'];
//
//  $card_type = ($values['field_card_type'] == 0) ? 'Visa' : 'Mastercard';
//
  if (DEBUG) {
    dpm('Submit - FORM ');
    dpm($form);
    dpm('Submit - FORM STATE');
    dpm($form_state);
  }

  // Test the Node Form_state
  $temp_id = time();
  //dpm('Temp ID = ' . $temp_id);
  // Store TempID
  //$form_state['values']['field_ad_details']['und'][0]['value'] = $temp_id;
  $form_state['node']->title = 'ads_' . $temp_id;
  //module_load_include('inc', 'ad_payment', 'ad_payment_price_check');
  //$submission_vars = ad_payment_price_check($form_state, 'form_state');

  
//  $form_state['redirect'] = 'ad/' . $temp_id . '/thank-you';
  
  //$form_state['redirect'] = array('ad/' . $temp_id . '/thank-you');
  
   //dpm('Redirect = ' . $form_state['redirect']);
 
  
  // // Submit Data to Netidea
  // // Commented Out Until Live test

  // define ('VALIDATION_TEST_MODE', FALSE);
  // Following require needs to be enabled to function.
  //  require_once ('classifieds.db.php');
  // /* The CVVID is optional and can be omitted */
  // $ccid = updateDatabase(
  //  $values['field_first_name'] . ' ' . $values['field_last_name'],    // $_POST['name'],
  //  $values['email'],    // $_POST['email'],
  //  $card_type,    // $_POST['card_type'],
  //  $values['field_cc_number'],    // $_POST['card_number'],
  //  $values['field_exp_month'] . '/' . $values['field_exp_year'],    // $card_expiry,
  //  // NULL    // #$_POST['card_cvvid']);
  //  $values['field_exp_phone'],    // $_POST['phone']);
  // );
  //
  // /* You'll probably want to just email this link instead. */
  // #$url = sprintf('https://www.pennywiseads.com/admin/orders.php?action=view&id=%d', $ccid);
  // #print "Order <a href='$url'>#$id</a> saved.";



}


/**
 * Implementation of HOOK_node_insert()
 *
 * Save Form data to ADP table.
 * Encrypt CC Data before storing.
 *
 * @TODO
 * - This currently doesn't reference or receive any CCID numbers from Netidea.
 * - So all the CCID data is rand().
 */
function ad_payment_node_insert($node) {

  if($node->type == 'ad_s') {

    // Get Price
    module_load_include('inc', 'ad_payment', 'ad_payment_price_check');
    $details = ad_payment_price_check($node, 'node');

    if (DEBUG) {
      dpm('Node Insert Data');
      dpm($node);
      dpm('Data for DATABASE');
      dpm($details);
    }

    $nid = db_insert('adp')->fields(array(
      'ccid'    => $node->title,
      //'ccid'    => ($node->field_ccid['und'][0]['value']) ? $node->field_ccid['und'][0]['value'] : rand(),
      'uid'     => $node->uid,
      'nid'     => $node->nid,
      'cc_type' => aes_encrypt(($node->field_card_type == 0) ? 'MasterCard' : 'Visa'),
      'exp_m'   => aes_encrypt($node->field_exp_month),
      'exp_y'   => aes_encrypt($node->field_exp_year),
      'cc_num'  => aes_encrypt($node->field_cc_number), // substr($node->field_cc_number, -4),
      'notes'   => $note = ($details['note']) ? $details['note'] : 'NULL',
      'created' => $node->created,
      'word_count'  => $details['count']['count'],
      'areas'    => $details['areas'],
      'duration' => $details['duration']['actual'],
      'liveload' => $details['options']['liveload'],
      'image'    => $details['options']['image'],
      'price_total' => $details['total'],
      'price_taxes' => $details['taxes'],
      'price_subtotal' => $details['subtotal'],
      ))->execute();

      // Send Email upon Completion.
      ad_payment_mail_send($details);

      // Set up on screen receipt.
      variable_set('ad_submission_' . $node->title, $details);

      drupal_goto('ad/' . $node->title . '/thank-you');
    // SET CCID

    // Becuase Life isn't just.
    // You need to update the newly created node with correct data.
  }


}


/**
 * If you delete `ad_s` node type - delete related field in `adp` table.
 */
function ad_payment_node_delete($node) {
  if($node->type == 'ad_s') {
    $num_deleted = db_delete('adp')
      ->condition('nid', $node->nid)
      ->execute();
  }
}



/**
* Ad Price Display Theme Registration.
*
* @param $form_state['storage']['price']
*
* @return
*   HTML output for form display.
*/
function _ad_payment_form_price_display($form_state) {
  $price = $form_state['storage']['price'];
  if(!$price) {
    return;
  }

  // Ad Copy
  $ad_copy = check_plain($form_state['node']->field_ad_copy['und'][0]['value']);

  // Liveload
  $ad_status = ($price['options']['liveload'] == TRUE) ? 'Liveload Classified Ad' : 'Classified Ad';

  // Areas
 if (is_array($form_state['node']->field_area['und'])) {
   foreach($form_state['node']->field_area['und'] as $area) {
     $areas .= ' ' . $area[0];
   }
 }
  // Rate
  $rate = ($price['rate']['term_rate'] == 0) ? 'Personal' : 'Business';

  // Ad Taxonomy
  $classification = $price['rate']['term'];
  $section = $price['rate']['rate_name'];

  // Ad Price
  $discount = ($price['areas'] == 4) ? ' <br/><em>With $2 Discount for booking all four areas! </em>' : '';
  $ad_price = '$' . $price['total'];

  // Output Display
  // THIS NEEDS TO BE THEMED!
  $ad_review =
    '<dl>' .
    '<lh>Ad Copy:</lh><dt>' . $ad_copy . '</dt>' .
    '<lh>Ad Type:</lh><dt>' . $ad_status . '</dt>' .
    '<lh>Publication In <strong>' . $price['areas'] . '</strong> Area(s): </lh><dt> ' . $areas . ' </dt>' .
    '<lh>Classification:</lh><dt>' . $classification . ' (' . $section . ' rated)</dt>' .
    '<lh class="ad_price">Price:</lh><dt> <strong>' . $ad_price . '</strong>' . $discount . '<dt>' .
    '</dl>';

  // Set Form Return Value
  jQuery('#edit-field-price-und-0-value').attr('val', $ad_price);

  return $ad_review;

}


/**
 * Implementation of HOOK_page
 *
 * TODO 
 * - Make DB call and get list of Business Rated listings.
 * _ ! Dont' hardcode it!!
 */
function ad_payment_init() {

  drupal_add_css(drupal_get_path('module', 'ad_payment') . '/css/ad_payment.css', array('type' => 'file'));

  $business_rated = array(
    7  => 'Firewood',
    22 => 'Business Opportunities',
    23 => 'Employment Opportunities',
    38 => 'Commercial Rentals',
    39 => 'Rentals',
    43 => 'Commercial Real Estate',
    44 => 'Vacation Rentals',
    49 => 'Contractors/Tradesperson',
    52 => 'Health/Personal Care',
    69 => 'Farmers Market',
  );
  $headers = array(
    14 => 1,
    20 => 23,
    32 => 34,
    35 => 36,
    37 => 47,
    48 => 50,
    54 => 57,
  );
  drupal_add_js(array('adPaymentBiz' => $business_rated), 'setting');
  drupal_add_js(array('adPaymentHead' => $headers), 'setting');

  // Add jQuery UI
  drupal_add_library('system', 'ui.tabs');
  drupal_add_library('system', 'ui.button');

}

/**
* Implementation of views_api()
*/
function ad_payment_views_api() {

  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'ad_payment') . '/views',
  );
}
