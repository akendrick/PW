<?php

/**
*  @file
*  This module parses Adworks data into new Classified nodes.
*
*   @TODO
*   Move image file search into seperate function:
*   - Check images in upload folder and across the `files` structure.
*   - implement `file_validate_is_image($file)` -- Pro D7 Dev p.334
*   - implement UTF-8 file conversion.
*   - Check previous ads.
*     - Perform a cursory check on the ad body (check 5-10 ads)
*     - Check for similar ad copy
*     - If several ads found similar then put alert:
*       - 'DO you want to overwrite previous ads?'
*       - 'Do you want to save file and not update?'
*/

/**
 * Implementation of HOOK_form_alter()
 */
function adworks_form_adworks_file_node_form_alter(&$form, &$form_state) {
  if (DEBUG) {
   dpm('FORM');
   dpm($form);
  }
}
 

/**
* Call Parser for Adworks INSERT - UPDATE - VIEW hooks().
*
* Disable Overlay on edit page.
*/

function adworks_node_insert($node) {
  if ($node->type == 'adworks_file') {
    $create_ads = $node->field_ad_creation_override[$node->language][0]['value'];
    
    _parse_adworks_data($node, $create_ads);
  }
}

function adworks_node_update($node) {
  #dsm($node);
  if ($node->type == 'adworks_file') {
    $create_ads = $node->field_ad_creation_override[$node->language][0]['value'];
    
    _parse_adworks_data($node, $create_ads);
  }
}

function adworks_node_view($node, $view_mode) {
  if ($node->type == 'adworks_file' && $view_mode == 'full' && $node->preview == 'Preview') {
    module_load_include('inc', 'adworks', 'parse_adworks');
  if (DEBUG) {
   dpm('NODE');
   dpm($node);
  }
    _adworks_pre_flight_ads($node);
  }
}


/**
*  Implementation of custom parser.
*
*  Parse through imputed Adworks data.
*  Go through ads one by one.
*/
function _parse_adworks_data($node) {

  // Convert pasted text into individual ads then create ads.
  if ($node->body) {
    
    // Get Parser
    module_load_include('inc', 'adworks', 'parse_adworks');

    
    // CHECK IMAGES
    $image_check = _adworks_pre_flight_ads($node);
    if ($image_check == FALSE) {
      return;
    }
    
    // If images present proceed...
    $adworks_data = $node->body['und'][0]['value'];
    
    // Convert Text to UTF8
    // OPTION2 // $adworks_data = mb_convert_encoding($adworks_data, "macintosh", "UTF-8");
    $adworks_ads = preg_split( '/\r\n|\r|\n/', $adworks_data);

    // Get Publish Dates
    $publish_date = array();
    $publish_date['start'] = strtotime($node->field_publish['und'][0]['value']) + strtotime('+14.5 hours');
    $publish_date['end'] = strtotime($node->field_publish['und'][0]['value2']) + strtotime('+16 hours');
    
    dpm("START: " . $publish_date['start'] . '(' . date("Y-m-d H", $publish_date['start']) . ') END: ' . $publish_date['end'] .  '(' . date("Y-m-d H", $publish_date['end']) . ')');
    foreach ($adworks_ads as $ad) {
      if ($ad != NULL || $ad != '') {
        $results = _adworks_parse_indivual_ad($ad, $publish_date);
      }
    }
    
    if ($results['image']['error']) {
      foreach ($results['image']['error'] as $missing) {
        $images .= $missing . "\n";
      }
      drupal_set_message('MISSING IMAGES: ' . $images, 'warning');    
    }
    elseif ($results['ad_count'] == 0 || $results['ad_count'] == NULL) {
      drupal_set_message('No Ads Created!', 'warning');    
    }
    else {
      drupal_set_message('Ads Created: ' . $results['ad_count'], 'status');    
    }
  }
}


