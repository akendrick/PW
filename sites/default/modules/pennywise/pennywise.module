<?php

/**
 * @file
 *  General hacks.
 *
 *  Add custom action links to PW Admin pages for node creation.
 *
 *  Custom blocks for use in layout:
 *    - PW Logo
 *    - PW Contact info (with editable data fields)
 *
 *  @TODO
 *  - Seperate Contact Block THEME layer.
 */

// FORM DEBUG
// Displays Form Data
define ('DEBUG', TRUE);

// VALIDATION_TEST_MODE: set to TRUE to allow any card number for testing purposes.
// Must be set before loading the CreditCardValidate.inc.php library! 
   define ('VALIDATION_TEST_MODE', TRUE);




/**
 * Implementation of HOOK_page
 */
function pennywise_init() {
  
  drupal_add_css(drupal_get_path('module', 'pennywise') . '/css/pennywise.css', array('type' => 'file'));

}


/**
 * Implementation of HOOK_menu
 *  - Custom form pages for Adworks, Classified & Display node creation.
 *  - Callback page for ad promotion.
 */
// function pennywise_menu() {

//  $items['admin/pennywise/classified/submit-classified'] = array(
//    'title'            => 'Create Classified Ad',
//    'access arguments' => array('Classified Ads: Create new content'),
//    'weight'           => 10,
//    'page callback'    => 'pennywise_create_node_page',
//    'page arguments'   => array('classified'),
//    'type'             => MENU_IS_LOCAL_TASK,
//  );

//  $items['admin/pennywise/classified/adworks-upload'] = array(
//    'title' => 'Upload Adworks File',
//    'page callback'    => 'pennywise_create_node_page',
//    'page arguments'   => array('adworks_file'),
//    'access arguments' => array('Adworks File: Create new content'),
//    'type'             => MENU_IS_LOCAL_TASK,
//    'weight'           => 20,
//  );
//
//  $items['admin/pennywise/display_ads/add'] = array(
//    'title'            => 'Create Display Ad',
//    'access arguments' => array('Display ads: Create new content'),
//    'weight'           => 10,
//    'page callback'    => 'pennywise_create_node_page',
//    'page arguments'   => array('display_ads'),
//    'type'             => MENU_IS_LOCAL_ACTION,
//  );
//
//  $items['admin/pennywise/classified/promote/%'] = array(
//    'title' => 'Promote',
//    'page callback'    => 'promote_to_classified_ad',
//    'page arguments'   => array(3),
//    'access arguments' => array('Adworks File: Create new content'),
//    'file'             => 'promote_classifieds.inc',
/*     'type'             => MENU_CALLBACK, */
//  );
//  return $items;
// }

/**
 * Custom page call back
 *
 * @return
 *  Create new display ad.
 **/
function pennywise_create_node_page($node_type) {

  module_load_include('inc', 'node', 'node.pages');
  $content = node_add($node_type);
  
  return $content;
}

/**
* Custom support function for MENU_LOCAL_TASKS_ALTER
*
* Custom sub-function for filling details into LOCAL ACTIONS
*/
function pennywise_custom_action_links($node_type, $action_link_name, $destination = NULL) {
  $item = menu_get_item('node/add/' . $node_type); 
  $item['title'] = $action_link_name ;
  if ($destination) {
    $item['path'] = $item['path'] . '?destination=' . $destination;
  }
  if ($item['access']) {
    return array(
      '#theme' => 'menu_local_action',
      '#link'  => $item,
    );
  }
}
/**
* Implementation of HOOK_menu_local_tasks_alter
* 
* Create Action Links dependant on URL and access.
*/
function pennywise_menu_local_tasks_alter(&$data, $router_item, $root_path) {

  // Add action links.
  $match = explode('/', $root_path);
  if ($match[0] == 'admin' && $match[1] == 'pennywise') {
    switch ($match[2]) {
      case 'display_ads':
        $data['actions']['output'][] = pennywise_custom_action_links('display-ads', 'Add Display Ad');
        break;
      case 'article':
        $data['actions']['output'][] = pennywise_custom_action_links('article', 'Add Editorial');
        break;
      case 'attachments':
        $data['actions']['output'][] = pennywise_custom_action_links('attachment', 'Add File Attachment');
        break;
      case 'page':
        $data['actions']['output'][] = pennywise_custom_action_links('page', 'Add New Page');
        break;
      case 'classified':
        $data['actions']['output'][] = pennywise_custom_action_links('classified', 'Create Classified Ad');
        $data['actions']['output'][] = pennywise_custom_action_links('adworks-file', 'Upload Adworks File');
        break;
      default: 
        $data['actions']['output'][] = pennywise_custom_action_links('display-ads', 'Create Display Ad');
        $data['actions']['output'][] = pennywise_custom_action_links('article', 'Add Editorial');
        $data['actions']['output'][] = pennywise_custom_action_links('classified', 'Create Classified Ad');
        $data['actions']['output'][] = pennywise_custom_action_links('adworks-file', 'Upload Adworks File');
        $data['actions']['output'][] = pennywise_custom_action_links('attachment', 'Add File Attachment');
        $data['actions']['output'][] = pennywise_custom_action_links('page', 'Add New Page');
        break;
    }
  }
  elseif ($match[0] == 'node' && $match[1] == 'add') {
    switch ($match[2]) {
      case 'display-ads':
        $data['actions']['output'][] = pennywise_custom_action_links('attachment', 'Add file attachment');
        break;
    }
  }
}

/**
 * Implementation of HOOK_block_info
 *
 * Adding basic theme blocks for Context and Delta.
 * @var pw_logo
 * - Custom Logo block
 * @var pw_contact
 * - Custom contact info block
 * @var pw_breadcrumb
 * - Custom breadcrumb box
 */
function pennywise_block_info() {
  $blocks['pw_logo'] = array(
    'info'    => t('PW Logo'),
    'status'  => FALSE,
    'visibility' => 0,
    'cache' => 8,
  );
  $blocks['pw_contact'] = array(
    'info'    => t('PW Contact'),
    'status'  => FALSE,
    'visibility' => 0,
    'cache' => 8,
  );
  $blocks['pw_breadcrumb'] = array(
    'info'    => t('PW BreadCrumbs'),
    'status'  => FALSE,
    'visibility' => 0,
    'cache' => 8,
  );
  
  return $blocks;
}

/**
 * Implementation of HOOK_block_configure
 *
 * Configuration options for Contact information block.
 */
function pennywise_block_configure($delta) {
  $form = array();
  switch($delta) {
    case 'pw_contact':
      $form['pennywise_contact_information']['pw_phone_toll_free'] = array(
        '#type' => 'textfield',
        '#title' => t('Toll free phone number.'),
        '#size' => 15,
        '#default_value' => variable_get('pw_phone_toll_free', '1-800-663-4619'),
      );
      $form['pennywise_contact_information']['pw_phone_local'] = array(
        '#type' => 'textfield',
        '#title' => t('Local phone number.'),
        '#size' => 15,
        '#default_value' => variable_get('pw_phone_local', '250-353-2602'),
      );
      $form['pennywise_contact_information']['pw_phone_fax'] = array(
        '#type' => 'textfield',
        '#title' => t('Fax number.'),
        '#size' => 15,
/*         '#description' => t('This is the main contact information for Pennywise.'), */
        '#default_value' => variable_get('pw_phone_fax', '250-353-7444'),
      );
      $form['pennywise_contact_information']['pw_mailing_address'] = array(
        '#type' => 'textfield',
        '#title' => t('General email address.'),
        '#size' => 80,
        '#default_value' => variable_get('pw_mailing_address', 'Box 430, Kaslo, BC Canada, V0G 1M0'),
      );
      $form['pennywise_contact_information']['pw_email'] = array(
        '#type' => 'textfield',
        '#title' => t('Mailing address.'),
        '#size' => 45,
        '#default_value' => variable_get('pw_email', 'info@pennywiseads.com'),
      );
      $form['pennywise_contact_information']['pw_facebook_link'] = array(
        '#type' => 'textfield',
        '#title' => t('Facebook link.'),
        '#size' => 50,
        '#description' => t('Include full link address. This means <strong>http://</strong>. '),
        '#default_value' => variable_get('pw_facebook_link', 'http://www.facebook.com/profile.php?id=728375773'),
      );
      break;
  }
  
  return $form;
}


/**
* Implementation of HOOK_block_save
*/
function pennywise_block_save($delta = '', $edit = array()) {

  switch($delta) {
    case 'pw_contact':
      variable_set('pw_title', $edit['pw_contact_title']);
      variable_set('pw_phone_toll_free', $edit['pw_phone_toll_free']);
      variable_set('pw_phone_local', $edit['pw_phone_local']);
      variable_set('pw_phone_fax', $edit['pw_phone_fax']);
      variable_set('pw_mailing_address', $edit['pw_mailing_address']);
      variable_set('pw_email', $edit['pw_email']);
      variable_set('pw_facebook_link',   $edit['pw_facebook_link']);
      break;
  }
}

/**
 * Implementation of HOOK_block_view
 *
 * Call custom block details.
 * - Logo block
 * - Contact block
 * - Breadcrumb block
 */
function pennywise_block_view($delta = '') {
  switch($delta) {
    case 'pw_logo':
      $subject    = '';
      $logo_path  = theme_get_setting('logo');
      $image      = '<img src="' . $logo_path . '" alt="' . t('Home') . '" />';
      $content    = l($image, '', array('html' => TRUE, 'attributes' => array('rel' => 'home', 'id' => 'logo', 'title' => t('Home'))));
      break;

    case 'pw_contact':
      $subject = variable_get('pw_contact_title', '<none>');
      
      $pw_contact = array(
        'toll_free'   => variable_get('pw_phone_toll_free'),
        'local_phone' => variable_get('pw_phone_local'),
        'fax'         => variable_get('pw_phone_fax'),
        'address'     => variable_get('pw_mailing_address'),
        'email'       => l('email', 'mailto:' . variable_get('pw_email'), array('absolute' => TRUE)),
        'facebook'    => l('facebook', variable_get('pw_facebook_link'), array('absolute' => TRUE)),
      );
  
      $content = '<dl id="pw-contact-info-block">';
      $a = 0;
      foreach($pw_contact as $key => $value) {
        $key_view = ucwords(str_replace('_', ' ', $key));
        $a++;
        $row = ($a % 2)? 'row-odd' : 'row-even';
        $content .= "<div class='pw-contact-wrapper pw-contact-$key-wrapper $row'>";
        $content .= "<dt class='pw-contact-label pw-contact-$key-label'>$key_view</dt>";
        $content .= "<dd class='pw-contact-value pw-contact-$key-value'>$value</dd>";
        $content .= "</div>";
      }      
      $content .= '</dl>';

      break;  
    case 'pw_breadcrumb':
      $site_path = $base_url . base_path();
    
      $subject = '';
      $url = current_path();

      $address_string = explode('/', $url);
      $page_id = array_pop($address_string);
      $term = taxonomy_term_load($page_id);
      
      $home = "<a href='$site_path'>  Classifieds >> </a>";
      
      if ($term->tid) {
        // If taxonomy term load current page into breadcrumbs.
        $child = "<a href='$site_path/taxonomy/term/" . $term->tid . "'> " . $term->name . " </a>";
        $ancestor = db_query('SELECT parent FROM {taxonomy_term_hierarchy} WHERE tid = :tid', array(':tid' => $term->tid))->fetchField();
        
        // Load Parent - if any;
        if ($ancestor) {
            $parent = taxonomy_term_load($ancestor);
            $parent = "<a href='$site_path/taxonomy/term/" . $parent->tid . "'>  " . $parent->name . " >> </a>";
        }
        $content = "<div id='pw-breadcrumb' >$home $parent $child </div>";
      }
      else {
        $content = '';
      }
      break;  
  }
  $block = array(
    'subject' => $subject,
    'content' => $content,
  );

  return $block;
}
